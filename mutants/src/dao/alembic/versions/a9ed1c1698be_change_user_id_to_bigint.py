"""change user id to bigint

Revision ID: a9ed1c1698be
Revises: e88e3452f281
Create Date: 2025-08-22 17:28:15.374584

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a9ed1c1698be'
down_revision: Union[str, Sequence[str], None] = 'e88e3452f281'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
from inspect import signature as _mutmut_signature
from typing import Annotated
from typing import Callable
from typing import ClassVar


MutantDict = Annotated[dict[str, Callable], "Mutant"]


def _mutmut_trampoline(orig, mutants, call_args, call_kwargs, self_arg = None):
    """Forward call to original or mutated function, depending on the environment"""
    import os
    mutant_under_test = os.environ['MUTANT_UNDER_TEST']
    if mutant_under_test == 'fail':
        from mutmut.__main__ import MutmutProgrammaticFailException
        raise MutmutProgrammaticFailException('Failed programmatically')      
    elif mutant_under_test == 'stats':
        from mutmut.__main__ import record_trampoline_hit
        record_trampoline_hit(orig.__module__ + '.' + orig.__name__)
        result = orig(*call_args, **call_kwargs)
        return result
    prefix = orig.__module__ + '.' + orig.__name__ + '__mutmut_'
    if not mutant_under_test.startswith(prefix):
        result = orig(*call_args, **call_kwargs)
        return result
    mutant_name = mutant_under_test.rpartition('.')[-1]
    if self_arg:
        # call to a class method where self is not bound
        result = mutants[mutant_name](self_arg, *call_args, **call_kwargs)
    else:
        result = mutants[mutant_name](*call_args, **call_kwargs)
    return result


def x_upgrade__mutmut_orig() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_1() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(None, schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_2() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_3() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', ) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_4() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('XXreposting_bot_usersXX', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_5() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('REPOSTING_BOT_USERS', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_6() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column(None,
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_7() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=None,
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_8() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=None,
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_9() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=None,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_10() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=None)

    # ### end Alembic commands ###


def x_upgrade__mutmut_11() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column(existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_12() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_13() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_14() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_15() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               )

    # ### end Alembic commands ###


def x_upgrade__mutmut_16() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('XXtelegram_idXX',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_17() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('TELEGRAM_ID',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_18() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True,
               autoincrement=True)

    # ### end Alembic commands ###


def x_upgrade__mutmut_19() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=False)

    # ### end Alembic commands ###

x_upgrade__mutmut_mutants : ClassVar[MutantDict] = {
'x_upgrade__mutmut_1': x_upgrade__mutmut_1, 
    'x_upgrade__mutmut_2': x_upgrade__mutmut_2, 
    'x_upgrade__mutmut_3': x_upgrade__mutmut_3, 
    'x_upgrade__mutmut_4': x_upgrade__mutmut_4, 
    'x_upgrade__mutmut_5': x_upgrade__mutmut_5, 
    'x_upgrade__mutmut_6': x_upgrade__mutmut_6, 
    'x_upgrade__mutmut_7': x_upgrade__mutmut_7, 
    'x_upgrade__mutmut_8': x_upgrade__mutmut_8, 
    'x_upgrade__mutmut_9': x_upgrade__mutmut_9, 
    'x_upgrade__mutmut_10': x_upgrade__mutmut_10, 
    'x_upgrade__mutmut_11': x_upgrade__mutmut_11, 
    'x_upgrade__mutmut_12': x_upgrade__mutmut_12, 
    'x_upgrade__mutmut_13': x_upgrade__mutmut_13, 
    'x_upgrade__mutmut_14': x_upgrade__mutmut_14, 
    'x_upgrade__mutmut_15': x_upgrade__mutmut_15, 
    'x_upgrade__mutmut_16': x_upgrade__mutmut_16, 
    'x_upgrade__mutmut_17': x_upgrade__mutmut_17, 
    'x_upgrade__mutmut_18': x_upgrade__mutmut_18, 
    'x_upgrade__mutmut_19': x_upgrade__mutmut_19
}

def upgrade(*args, **kwargs):
    result = _mutmut_trampoline(x_upgrade__mutmut_orig, x_upgrade__mutmut_mutants, args, kwargs)
    return result 

upgrade.__signature__ = _mutmut_signature(x_upgrade__mutmut_orig)
x_upgrade__mutmut_orig.__name__ = 'x_upgrade'


def x_downgrade__mutmut_orig() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_1() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(None, schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_2() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_3() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', ) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_4() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('XXreposting_bot_usersXX', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_5() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('REPOSTING_BOT_USERS', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_6() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column(None,
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_7() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=None,
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_8() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=None,
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_9() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=None,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_10() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=None)

    # ### end Alembic commands ###


def x_downgrade__mutmut_11() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column(existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_12() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_13() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_14() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_15() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               )

    # ### end Alembic commands ###


def x_downgrade__mutmut_16() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('XXtelegram_idXX',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_17() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('TELEGRAM_ID',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_18() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True,
               autoincrement=True)

    # ### end Alembic commands ###


def x_downgrade__mutmut_19() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reposting_bot_users', schema=None) as batch_op:
        batch_op.alter_column('telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=False)

    # ### end Alembic commands ###

x_downgrade__mutmut_mutants : ClassVar[MutantDict] = {
'x_downgrade__mutmut_1': x_downgrade__mutmut_1, 
    'x_downgrade__mutmut_2': x_downgrade__mutmut_2, 
    'x_downgrade__mutmut_3': x_downgrade__mutmut_3, 
    'x_downgrade__mutmut_4': x_downgrade__mutmut_4, 
    'x_downgrade__mutmut_5': x_downgrade__mutmut_5, 
    'x_downgrade__mutmut_6': x_downgrade__mutmut_6, 
    'x_downgrade__mutmut_7': x_downgrade__mutmut_7, 
    'x_downgrade__mutmut_8': x_downgrade__mutmut_8, 
    'x_downgrade__mutmut_9': x_downgrade__mutmut_9, 
    'x_downgrade__mutmut_10': x_downgrade__mutmut_10, 
    'x_downgrade__mutmut_11': x_downgrade__mutmut_11, 
    'x_downgrade__mutmut_12': x_downgrade__mutmut_12, 
    'x_downgrade__mutmut_13': x_downgrade__mutmut_13, 
    'x_downgrade__mutmut_14': x_downgrade__mutmut_14, 
    'x_downgrade__mutmut_15': x_downgrade__mutmut_15, 
    'x_downgrade__mutmut_16': x_downgrade__mutmut_16, 
    'x_downgrade__mutmut_17': x_downgrade__mutmut_17, 
    'x_downgrade__mutmut_18': x_downgrade__mutmut_18, 
    'x_downgrade__mutmut_19': x_downgrade__mutmut_19
}

def downgrade(*args, **kwargs):
    result = _mutmut_trampoline(x_downgrade__mutmut_orig, x_downgrade__mutmut_mutants, args, kwargs)
    return result 

downgrade.__signature__ = _mutmut_signature(x_downgrade__mutmut_orig)
x_downgrade__mutmut_orig.__name__ = 'x_downgrade'
