"""Change datetime to date in article and in review

Revision ID: 68eca1f3e018
Revises: 62205b9e3a2e
Create Date: 2025-10-22 11:27:14.176340

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# revision identifiers, used by Alembic.
revision: str = '68eca1f3e018'
down_revision: Union[str, Sequence[str], None] = '62205b9e3a2e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               type_=sa.Date(),
               nullable=False)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               type_=sa.Date(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.Date(),
               type_=sa.DATETIME(),
               nullable=True)

    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.Date(),
               type_=sa.DATETIME(),
               nullable=True)

    # ### end Alembic commands ###
